name: 'Publish on GitHub Pages'
description: 'Publish files on GitHub Pages and link to them'
inputs:
  GH_PAGES_BRANCH:
    description: 'Branch for GitHub Pages content'
    required: false
    default: 'gh-pages'
  FILE_PATH:
    description: 'Path of file or directory to be published, e.g. target/report.html or target/'
    required: true
  COMMIT_MESSAGE:
    description: 'Commit message when pushing to GitHub Pages branch'
    required: true
  LINK_TEXT:
    description: 'Text to display on link to file'
    required: false
    default: ''
  SKIP_LINK:
    description: 'Skip generating links at end of run'
    required: false
    default: false
  BULK:
    description: 'Upload the contents of a directory instead of a single file'
    required: false
    default: false
runs: 
  using: 'composite'
  steps:      
    - name: 'Push files to GitHub Pages branch' 
      shell: bash
      run: |
        git config --global user.email ""
        git config --global user.name "Github Actions"
        git add -f ${{ inputs.FILE_PATH }}
        git stash
        git fetch
        git switch ${{ inputs.GH_PAGES_BRANCH }}
        if [[ -d $${{ inputs.FILE_PATH }} ]]; then
          echo "Found directory ${{ inputs.FILE_PATH }}"
          git rm -r --ignore-unmatch $(dirname ${{ inputs.FILE_PATH }})/$(basename ${{ inputs.FILE_PATH }})/*
        elif [[ -f ${{ inputs.FILE_PATH }} ]]; then
          echo "Found file ${{ inputs.FILE_PATH }}"
          git rm -r --ignore-unmatch $(dirname ${{ inputs.FILE_PATH }})/*
        fi        
        git checkout stash@{0} -- ${{ inputs.FILE_PATH }}
        git diff --name-only --cached
        echo "COMMITTED_FILES<<EOF" >> $GITHUB_ENV
        git diff --name-only --cached >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        git commit -am "${{ inputs.COMMIT_MESSAGE }}"
        git push -f

    - name: 'Link to files in workflow summary'
      if: ${{ inputs.SKIP_LINK == 'false' }}
      shell: bash
      run: |
        export org=$(echo $GITHUB_REPOSITORY | sed -E 's/^([A-Za-z0-9_\-]+)\/.+$/\1/')
        export repo=$(echo $GITHUB_REPOSITORY | sed -E 's/^.+\/([A-Za-z0-9_\-]+)$/\1/')
        while IFS= read -r line; do
          echo "[${{ inputs.LINK_TEXT }} $line](https://$org.github.io/$repo/$line)" >> $GITHUB_STEP_SUMMARY
        done <<< "$COMMITTED_FILES"
        
