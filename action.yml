name: 'ECS task-def Update action'
description: 'Updates ECS task-def'

inputs:
  task-def-file-name:
    description: 'Task-def file name'
    required: true
  family-name:
    description: 'Task-def family name'
    required: true
  image-arn:
    description: 'Image ARN to use'
    required: true
  aws-role:
    description: 'AWS Role to assume'
    required: true
  aws-region:
    description: 'AWS_REGION secret'
    required: true
  ci-repo-url:
    description: 'CI_REPO_URL secret'
    required: true
  ci-repo-branch:
    description: 'Branch or tag of CI-repo'
    required: true
  ci-ssh-key:
    description: 'CI_SSH_KEY secret'
    required: true
  environment-index:
    description: 'Index of environment value to set'
    required: false
    default: 0
  environment-value:
    description: 'Set this value to environment with given index in the container'
    required: false
outputs:
  revision:
    description: 'Added task-def revision'
    value: ${{ steps.revision.outputs.revision}}

runs:
  using: composite
  steps:
    - name: Print parameters
      run: echo Updating ecs task-def ${{ inputs.family-name }} to image ${{ inputs.image-arn }}
      shell: bash
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.ci-repo-url }}
        ssh-key: ${{ inputs.ci-ssh-key }}
        ref: ${{ inputs.ci-repo-branch }}
        path: digitraffic-ci
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ inputs.aws-role }}
        role-session-name: gh-actions-update-ecs-${{ inputs.family-name }}
        aws-region: ${{ inputs.aws-region }}
    - name: Copy task-def from ci-repo
      if: ${{ inputs.environment-value == '' }}
      shell: bash
      run: cp digitraffic-ci/aws/task-def/${{ inputs.task-def-file-name }}-task-def.json task-def.json
    - name: Set parameter value
      if: ${{ inputs.environment-value != '' }}
      shell: bash
      run: jq -c '.containerDefinitions[0].environment[${{ inputs.environment-index }}].value = "${{ inputs.environment-value }}"' digitraffic-ci/aws/task-def/${{ inputs.task-def-file-name }}-task-def.json > task-def.json
    - name: Create new task-def
      run: jq -c '.containerDefinitions[0].image = "${{ inputs.image-arn }}"' task-def.json > task-def-1.json
      shell: bash
    - name: Update task definition
      id: revision
      run: |       
        aws ecs register-task-definition \
          --family ${{ inputs.family-name }} \
          --cli-input-json file://task-def-1.json \
          --region ${{ inputs.aws-region }} \
          > output.json

        TASK_REVISION=$(jq -r '.taskDefinition.revision' output.json)

        echo "revision=$TASK_REVISION" >> $GITHUB_OUTPUT
      shell: bash
